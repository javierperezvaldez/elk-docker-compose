version: '3.6'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    container_name: elasticsearch
    ports: ['9200:9200']
    volumes:
      - ./es_data:/usr/share/elasticsearch/data
    environment:
      - node.name=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=ecommerce_sample_cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      stack:
        aliases:
          - elasticsearch


  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.0
    container_name: kibana
    ports: ['5601:5601']
    depends_on: ['elasticsearch']
    networks:
      stack:
        aliases:
          - kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  logstash:
    image: docker.elastic.co/logstash/logstash:7.3.0
    links:
      - elasticsearch
    container_name: logstash
    depends_on: ['elasticsearch']
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
    volumes:
      - ./../config/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./../config/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "9600:9600"
      - "5000:5000"      
      - "9800:9800"
    networks:
      stack:
        aliases:
          - logstash

networks: {stack: {}}

# use docker volume to persist ES data outside of a container.
volumes:
  es_data:
    driver: local
